[tool.poetry]
name = "aurelio-sdk"
version = "0.0.12"
description = "Aurelio Platform SDK"
authors = ["Team <hello@aurelio.ai>"]
readme = "README.md"
packages = [{ include = "aurelio_sdk" }]

[project]
name = "aurelio-sdk"
version = "0.0.11"
license = { file = "LICENSE" }

[tool.poetry.dependencies]
python = "^3.9, <4.0"
aiohttp = "^3.10.5"
requests = "^2.32.3"
pydantic = "^2.9.2"
colorlog = "^6.8.2"
requests-toolbelt = "^1.0.0"


[tool.poetry.group.dev.dependencies]
ruff = "^0.6.7"
types-requests = "^2.32.0.20240914"
datasets = "^3.0.0"
mypy = "^1.11.2"
ipykernel = "^6.29.5"
aiofiles = "^24.1.0"
types-aiofiles = "^24.1.0.20240626"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle
    "F",  # pyflakes
    "UP", # pyupgrade,
    "I",  # isort
]
# Never enforce `E501` (line length violations).

ignore = ["E501", "UP007", "UP006", "UP035"]
fixable = ["ALL"]
exclude = ["*.ipynb"]

[tool.ruff]
target-version = "py39"


[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-line-length = "dynamic"
exclude = ["*.ipynb"]


[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.mypy]
ignore_missing_imports = true
