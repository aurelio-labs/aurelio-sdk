name: Release Docs

on:
  release:
    types: [ released ]
  workflow_dispatch:
jobs:
  build-docs:
    permissions:
      contents: read
      id-token: write
    name: Build Docs
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
        - "3.13"
    env:
      POETRY_VERSION: "2.0.1"
    steps:
    - uses: actions/checkout@v4
    - name: Cache Poetry
      uses: actions/cache@v4
      with:
        path: ~/.poetry
        key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-poetry-
    - name: Install poetry
      run: |
        pipx install poetry==$POETRY_VERSION
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: poetry
    - name: Install dependencies
      run: |
        poetry install --all-extras

    - name: Build docs
      run: |
        mkdir -p docs/build
        poetry run pydoc-markdown .pydoc-markdown.yml
    
    - name: Checkout docs repo
      uses: actions/checkout@v4
      with:
        repository: aurelio-labs/docs
        path: temp-docs
        token: ${{ secrets.DOCS_PAT }}
    
    - name: Copy and rename docs
      run: |
        ROOT_DIR=$(pwd)
        rm -rf temp-docs/aurelio-sdk/client-reference
        mkdir -p temp-docs/aurelio-sdk/client-reference/
        
        # Find and copy all md files
        cd docs/build/aurelio_sdk
        find . -type f -name "*.md" | while read file; do
          dir=$(dirname "$file")
          echo "Processing file: $file in directory: $dir"
          mkdir -p "$ROOT_DIR/temp-docs/aurelio-sdk/client-reference/$dir"
          cp "$file" "$ROOT_DIR/temp-docs/aurelio-sdk/client-reference/${file%.md}.mdx"
        done
      
    - name: Update frontmatter keys
      run: |
        find temp-docs/aurelio-sdk/client-reference -type f -name "*.mdx" -exec sed -i 's/sidebar_label:/sidebarTitle:/g' {} +

    - name: Install jq
      run: sudo apt-get install -y jq

    - name: Update mintlify docs.json navigation
      run: |
        # Get files and create grouped structure using jq
        files=$(cd temp-docs/aurelio-sdk/client-reference && find . -type f -name "*.mdx" | sed 's|^./||' | sed 's|.mdx$||' | sort | jq -R -s '
          split("\n")[:-1] 
          | map("aurelio-sdk/client-reference/" + .) 
          | reduce .[] as $path (
              {"root": [], "groups": {}};
              if ($path | split("/") | length) == 4 then
                .groups[$path | split("/")[2]] += [$path]
              else
                .root += [$path]
              end
            )
          | [.root[], (.groups | to_entries | map({
              "group": .key,
              "pages": .value
            }))[]
          ]
        ')
        
        # Update the docs.json file
        jq --arg pages "$files" '
          (.navigation.tabs[] | select(.tab == "Aurelio SDK") | 
           .groups[] | select(.group == "Client Reference") | 
           .pages) |= ($pages | fromjson)
        ' temp-docs/docs.json > temp-docs/docs.json.tmp && mv temp-docs/docs.json.tmp temp-docs/docs.json

    - name: Commit and push changes
      working-directory: temp-docs
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add .
        git diff --quiet && git diff --staged --quiet || (git commit -m "Update Aurelio SDK documentation" && git push)